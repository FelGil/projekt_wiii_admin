{"version":3,"sources":["admin_main.js"],"names":["listContainer","document","getElementById","eduAddEdit","addNewEduBtn","eduSubmitBtn","eduEditBtn","addNewEduDispBtn","eduLink","eduForm","eduFormheader","eduUniversityFrm","eduCourseFrm","eduStartDateFrm","eduEndDateFrm","addEventListener","getEducations","createEdu","updateEdu","addNewEduDispToggle","idHolder","restlink","classList","add","pofLink","remove","wrkLink","style","display","addNewPofDispBtn","addNewWrkDispBtn","pofAddEdit","addNewPofDispToggle","wrkAddEdit","addNewWrkDispToggle","innerHTML","fetch","then","response","json","data","forEach","edu","tmp_startdate","startDate","substring","tmp_enddate","endDate","university","course","id","value","innerText","reset","var_eduUniv","var_eduCour","var_eduStart","var_eduEnd","verifyUniversity","verifyCourse","verifyStartDate","verifyEndDate","concatEdu","console","log","method","headers","body","JSON","stringify","text","catch","error","deleteEdu","confirm","setFormEdu","pofSubmitBtn","pofEditBtn","pofForm","pofFormheader","pofTitle","pofURL","pofDescription","getPortfolio","pof","title","url","description","createPof","var_pofTitle","var_pofURL","var_pofDesc","verifyTitle","verifyUrl","verifyDescription","concatPof","deletePof","setFormPof","updatePof","wrkSubmitBtn","wrkEditBtn","wrkForm","wrkEmployer","wrkTitle","wrkStartDate","wrkEndDate","getWrkexperience","wrk","employer","wrkFormheader","createWrk","var_wrkEmployer","var_wrkTitle","var_wrkStartDate","var_wrkEndDate","verifyEmployer","verifyWrkTitle","concatWrk","deleteWrk","setFormWrk","updateWrk","length","alert"],"mappings":"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","file":"../js/admin_main.js","sourcesContent":["\"use strict\";\r\n\r\n//Element Variables \r\nlet listContainer = document.getElementById(\"admin_list_container\");\r\nlet eduAddEdit = document.getElementById(\"eduAddEdit\");\r\nlet addNewEduBtn = document.getElementById(\"addNewEduBtn\");\r\nlet eduSubmitBtn = document.getElementById(\"eduSubmitBtn\");\r\nlet eduEditBtn = document.getElementById(\"eduEditBtn\");\r\nlet addNewEduDispBtn = document.getElementById(\"addNewEduDispBtn\");\r\n\r\n//Element Variable Link\r\nlet eduLink = document.getElementById(\"edu_link\");\r\n\r\n//Element Variables Form\r\nlet eduForm = document.getElementById(\"eduForm\");\r\nlet eduFormheader = document.getElementById(\"eduFormheader\");\r\nlet eduUniversityFrm = document.getElementById(\"eduUniversity\");\r\nlet eduCourseFrm = document.getElementById(\"eduCourse\");\r\nlet eduStartDateFrm = document.getElementById(\"eduStartDate\");\r\nlet eduEndDateFrm = document.getElementById(\"eduEndDate\");\r\n\r\n//Eventlisteners\r\neduLink.addEventListener(\"click\", getEducations);\r\neduSubmitBtn.addEventListener('click',createEdu);\r\neduEditBtn.addEventListener('click',updateEdu);\r\naddNewEduDispBtn.addEventListener('click',addNewEduDispToggle);\r\n\r\n\r\n//Variable to hold ID's\r\nlet idHolder = \"\";\r\n\r\nlet restlink = \"https://studenter.miun.se/~fegi2000/writeable/projekt_wiii_ws/api.php\";\r\n\r\n//Get function go get data from education table\r\nfunction getEducations() {\r\n\r\n    //Set classes on the links to show where we are\r\n    eduLink.classList.add(\"visited\");\r\n    pofLink.classList.remove(\"visited\");\r\n    wrkLink.classList.remove(\"visited\");\r\n    //Show or hide Add new buttons.\r\n    addNewEduDispBtn.style.display = \"block\";\r\n    addNewPofDispBtn.style.display = \"none\";\r\n    addNewWrkDispBtn.style.display = \"none\";\r\n\r\n    //Toggles Portfolio form if it was in state Block\r\n    if(pofAddEdit.style.display === 'block') {\r\n        addNewPofDispToggle();\r\n    }\r\n    //Toggles Work experience form if it was in state Block\r\n    if(wrkAddEdit.style.display === 'block') {\r\n        addNewWrkDispToggle();\r\n    }\r\n    \r\n    //Empty the listcontainer \r\n    listContainer.innerHTML = \"\";\r\n    \r\n    //Addlist header\r\n    listContainer.innerHTML +=\r\n    `<div class=\"rowWrapper listheader\">\r\n        <div class=\"adm_col1\">\r\n            <b>Lärosäte:</b>\r\n        </div>\r\n        <div class=\"adm_col2\">\r\n            <b>Utbildning:</b> \r\n        </div>\r\n        <div class=\"adm_col3\">\r\n            <b>Startdatum:</b>\r\n        </div>\r\n        <div class=\"adm_col4\">\r\n            <b>Slutdatum:</b>\r\n        </div>\r\n    </div>\r\n    `;\r\n\r\n    //Call restapi to get data from education table\r\n    //fetch('http://10.0.1.222/projekt_wiii_ws/api?type=edu')\r\n    fetch(restlink + '?type=edu')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        data.forEach(edu => {\r\n            //Run substring on start and end date to only show year and month.\r\n            let tmp_startdate = edu.startDate\r\n            tmp_startdate = tmp_startdate.substring(0,7);\r\n            let tmp_enddate = edu.endDate\r\n            tmp_enddate = tmp_enddate.substring(0,7);\r\n            //Add fetched data to listContainer element.\r\n            listContainer.innerHTML +=\r\n            `<div class=\"rowWrapper\">\r\n                <div class=\"adm_col1\">\r\n                <span class=\"small_listheader\">Lärosäte: </span>${edu.university}\r\n                </div>\r\n                <div class=\"adm_col2\">\r\n                <span class=\"small_listheader\">Utbildning: </span>${edu.course}\r\n                </div>\r\n                <div class=\"adm_col3\">\r\n                <span class=\"small_listheader\">Start datum: </span>${tmp_startdate}\r\n                </div>\r\n                <div class=\"adm_col4\">\r\n                <span class=\"small_listheader\">Slut datum: </span>${tmp_enddate}\r\n                </div>\r\n                <div class=\"adm_col5\">\r\n                    <button id=\"${edu.id}\" class=\"btn_del\" onClick=\"deleteEdu(${edu.id})\">Radera</button>\r\n                    <button id=\"${edu.id}\" class=\"btn_update\" onClick=\"setFormEdu(${edu.id})\">Ändra</button>\r\n                </div>\r\n            </div>`;\r\n            \r\n        });\r\n    })\r\n\r\n}\r\n\r\n//Toggle function to hide, show and change header/button text depending on what triggered this function\r\nfunction addNewEduDispToggle(value) {\r\n    //If addEdit container is showing, hide it and toggle some buttons and change test to header and change text to add new button.\r\n    if(eduAddEdit.style.display === \"block\") {\r\n        eduAddEdit.style.display =\"none\"\r\n        eduSubmitBtn.style.display = 'block';\r\n        eduEditBtn.style.display = 'none';\r\n        addNewEduDispBtn.innerText = \"Lägg till ny utbildning\";\r\n        eduFormheader.innerHTML = \"Lägg till utbildning:\";\r\n        eduForm.reset();\r\n    }\r\n    //if addEdit is hiding, show it and change add new button's text to hide, and reset form.\r\n    else {\r\n        eduAddEdit.style.display = \"block\";\r\n        eduEditBtn.style.display = 'none';\r\n        addNewEduDispBtn.innerText = \"Dölj\";\r\n        eduForm.reset();\r\n    }\r\n    //If function is called with value edit it does almost the same as the first if-state but\r\n    //it also hides submit new button, view  submit edit and change header of the form.\r\n    if(value === \"edit\") {\r\n        eduAddEdit.style.display = \"block\";\r\n        eduSubmitBtn.style.display = 'none';\r\n        eduEditBtn.style.display = 'block';\r\n        eduFormheader.innerHTML = \"Ändra utbildning\"\r\n        addNewEduDispBtn.innerText = \"Dölj\";\r\n        eduForm.reset();\r\n    }\r\n}\r\n\r\n//function to create an education\r\nfunction createEdu() {\r\n\r\n    //Get data from the form\r\n    let var_eduUniv = eduUniversityFrm.value;\r\n    let var_eduCour = eduCourseFrm.value;\r\n    let var_eduStart = eduStartDateFrm.value;\r\n    let var_eduEnd = eduEndDateFrm.value;\r\n\r\n    //validate the input if anyone returns false it jump out of this function\r\n    if(!verifyUniversity(var_eduUniv) || !verifyCourse(var_eduCour) || !verifyStartDate(var_eduStart) || ! verifyEndDate(var_eduEnd)){\r\n        return;\r\n    }\r\n\r\n    //concatenate fetched data to a single json variable\r\n    let concatEdu = {'university': var_eduUniv, 'course': var_eduCour, 'startDate': var_eduStart, 'endDate': var_eduEnd};\r\n    \r\n    //call rest-api to post the data to database\r\n    //http://localhost/projekt_wiii/pub/login.php\r\n    console.log(restlink + '?type=edu');\r\n    fetch(restlink + '?type=edu', {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        },\r\n        body: JSON.stringify(concatEdu),\r\n    })\r\n    .then(response => response.text())\r\n    .then(data => {\r\n        //If everything worked fine the list is reloaded and the form toggled to hide.\r\n        getEducations();\r\n        addNewEduDispToggle();\r\n    })\r\n    .catch(error => {\r\n        console.log('Error: ', error);\r\n    })\r\n\r\n}\r\n\r\n//function to delete a specific course\r\nfunction deleteEdu(id) {\r\n\r\n    //alert message to check that you want to delete the selected row.\r\n    if (confirm('Är du säker på att du vill ta bort detta?')) {\r\n        \r\n        //call the rest api to delete the selected row\r\n        fetch(restlink + '?type=edu&id=' + id, {\r\n            method: 'DELETE',\r\n        })\r\n        .then(response => response.text())\r\n        .then(data => {\r\n            //if everything is ok the list is reloaded.\r\n            getEducations();\r\n        })\r\n        .catch(error => {\r\n            console.log('Error: ', error);\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//function to populate the form when \"Ändra\" is pushed next to a course\r\nfunction setFormEdu(id){\r\n    \r\n    //call toggle function to show the edit form\r\n    addNewEduDispToggle(\"edit\");\r\n\r\n    //hold the selected education's id.\r\n    idHolder = id;\r\n\r\n    //fetch data for the slected row.    \r\n    fetch(restlink + '?type=edu&id=' + id)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        data.forEach(edu => {\r\n            //fetched data is pushed to the form\r\n            eduUniversityFrm.value = edu.university;\r\n            eduCourseFrm.value = edu.course;\r\n            eduStartDateFrm.value = edu.startDate;\r\n            eduEndDateFrm.value = edu.endDate;                        \r\n        });\r\n    })\r\n}\r\n\r\n//function to update a course with new data\r\nfunction updateEdu(){\r\n\r\n    //get data form the form and add it to variables\r\n    let var_eduUniv = eduUniversityFrm.value;\r\n    let var_eduCour = eduCourseFrm.value;\r\n    let var_eduStart = eduStartDateFrm.value;\r\n    let var_eduEnd = eduEndDateFrm.value;\r\n\r\n    //validate the input if anyone returns false it jump out of this function\r\n    if(!verifyUniversity(var_eduUniv) || !verifyCourse(var_eduCour) || !verifyStartDate(var_eduStart) || ! verifyEndDate(var_eduEnd)){\r\n        return;\r\n    }\r\n    //concatenate fetched data to a single json variable\r\n    let concatEdu = {'university': var_eduUniv, 'course': var_eduCour, 'startDate': var_eduStart, 'endDate': var_eduEnd};\r\n    \r\n    //call rest-api to push the edited data to database\r\n    fetch(restlink + '?type=edu&id=' + idHolder, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(concatEdu),\r\n    })\r\n    .then(response => response.text())\r\n    .then(data => {\r\n        //if everything is ok the list is reloaded and the form is toggled to hide\r\n        getEducations();\r\n        addNewEduDispToggle();\r\n    })\r\n    .catch(error => {\r\n        console.log('Error: ', error);\r\n    })\r\n}\r\n\r\n//-- Portfolio --//\r\n//Element variables\r\nlet pofSubmitBtn = document.getElementById(\"pofSubmitBtn\");\r\nlet pofEditBtn = document.getElementById(\"pofEditBtn\");\r\nlet pofAddEdit = document.getElementById(\"pofAddEdit\");\r\nlet addNewPofDispBtn = document.getElementById(\"addNewPofDispBtn\");\r\nlet pofLink = document.getElementById(\"pof_link\");\r\n\r\n//Form Element\r\nlet pofForm = document.getElementById(\"pofForm\");\r\nlet pofFormheader = document.getElementById(\"pofFormheader\");\r\nlet pofTitle = document.getElementById(\"pofTitle\");\r\nlet pofURL = document.getElementById(\"pofURL\");\r\nlet pofDescription = document.getElementById(\"pofDescription\");\r\n\r\n//Element Variable Link\r\npofLink.addEventListener(\"click\", getPortfolio);\r\n\r\n//Eventlisteners\r\naddNewPofDispBtn.addEventListener('click',addNewPofDispToggle);\r\npofSubmitBtn.addEventListener('click',createPof);\r\npofEditBtn.addEventListener('click',updatePof);\r\n\r\n//Get function go get data from portfolio table\r\nfunction getPortfolio() {\r\n\r\n    //Set classes on the links to show where we are\r\n    pofLink.classList.add(\"visited\");\r\n    eduLink.classList.remove(\"visited\");\r\n    wrkLink.classList.remove(\"visited\");\r\n\r\n    //Show or hide Add new buttons.\r\n    addNewPofDispBtn.style.display = \"block\";\r\n    addNewEduDispBtn.style.display = \"none\";\r\n    addNewWrkDispBtn.style.display = \"none\";\r\n\r\n    //Toggles Education form if it was in state Block\r\n    if(eduAddEdit.style.display === 'block') {\r\n        addNewEduDispToggle();\r\n    }\r\n     //Toggles Work experience form if it was in state Block\r\n    if(wrkAddEdit.style.display === 'block') {\r\n        addNewWrkDispToggle();\r\n    }\r\n    \r\n    //Empty the listcontainer \r\n    listContainer.innerHTML = \"\";\r\n    //Addlist header\r\n    listContainer.innerHTML +=\r\n    `<div class=\"rowWrapper listheader\">\r\n        <div class=\"adm_col1\">\r\n            <b>Titel:</b>\r\n        </div>\r\n        <div class=\"adm_col2\">\r\n            <b>URL:</b> \r\n        </div>\r\n        <div class=\"adm_col3\">\r\n            <b>Beskrivning:</b>\r\n        </div>\r\n    </div>\r\n    `;\r\n\r\n    //Call restapi to get data from education table\r\n    fetch(restlink + '?type=pof')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        data.forEach(pof => {\r\n            //Add fetched data to listContainer element.\r\n            listContainer.innerHTML +=\r\n            `<div class=\"rowWrapper\">\r\n                <div class=\"adm_col1\">\r\n                <span class=\"small_listheader\">Titel: </span>${pof.title}\r\n                </div>\r\n                <div class=\"adm_col2\">\r\n                <span class=\"small_listheader\">URL: </span><a href=\"${pof.url}\">Länk</a>\r\n                </div>\r\n                <div class=\"adm_col3\">\r\n                <span class=\"small_listheader\">Beskrivning: </span>${pof.description}\r\n                </div>\r\n                <div class=\"adm_col5\">\r\n                    <button id=\"${pof.id}\" class=\"btn_del\" onClick=\"deletePof(${pof.id})\">Radera</button>\r\n                    <button id=\"${pof.id}\" class=\"btn_update\" onClick=\"setFormPof(${pof.id})\">Ändra</button>\r\n                </div>\r\n            </div>`;\r\n            \r\n        });\r\n    })\r\n\r\n}\r\n\r\n//Toggle function to hide, show and change header/button text depending on what triggered this function\r\nfunction addNewPofDispToggle(value) {\r\n    //If add/edit education form is in state block\r\n    if(pofAddEdit.style.display === \"block\") {\r\n        pofAddEdit.style.display =\"none\"\r\n        pofSubmitBtn.style.display = 'block';\r\n        pofEditBtn.style.display = 'none';\r\n        addNewPofDispBtn.innerText = \"Lägg till ny webbplats\";\r\n        pofFormheader.innerHTML = \"Lägg till webbplats:\";\r\n        pofForm.reset();\r\n    } else {\r\n        pofAddEdit.style.display = \"block\";\r\n        addNewPofDispBtn.innerText = \"Dölj\";\r\n        pofEditBtn.style.display = 'none';\r\n        pofForm.reset();\r\n    }\r\n    //if function is called with text edit.\r\n    if (value === \"edit\") {\r\n        pofAddEdit.style.display = \"block\";\r\n        addNewPofDispBtn.innerText = \"Dölj\";\r\n        pofSubmitBtn.style.display = 'none';\r\n        pofEditBtn.style.display = 'block';\r\n        pofFormheader.innerHTML = \"Ändra webbplats:\";\r\n        pofForm.reset();\r\n    }\r\n}\r\n\r\n//function to add new sites toportfolio \r\nfunction createPof() {\r\n\r\n    //Get data from the form\r\n    let var_pofTitle = pofTitle.value;\r\n    let var_pofURL = pofURL.value\r\n    let var_pofDesc = pofDescription.value;\r\n\r\n    //validate the input if anyone returns false it jump out of this function\r\n    if(!verifyTitle(var_pofTitle) || !verifyUrl(var_pofURL) || !verifyDescription(var_pofDesc)){\r\n        return;\r\n    }\r\n\r\n    //concatenate fetched data to a single json variable\r\n    let concatPof = {'title': var_pofTitle, 'url': var_pofURL, 'description': var_pofDesc};\r\n    \r\n    //call rest-api to post the data to database\r\n    fetch(restlink + '?type=pof', {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        },\r\n        body: JSON.stringify(concatPof),\r\n    })\r\n    .then(response => response.text())\r\n    .then(data => {\r\n        //If everything worked fine the list is reloaded and the form toggled to hide.\r\n        getPortfolio();\r\n        addNewPofDispToggle();\r\n    })\r\n    .catch(error => {\r\n        console.log('Error: ', error);    \r\n    })\r\n\r\n}\r\n\r\n//function to delete a specific site from portfolio\r\nfunction deletePof(id) {\r\n    //alert message to check that you want to delete the selected row.\r\n    if (confirm('Är du säker på att du vill ta bort detta?')) {\r\n        \r\n        //call the rest api to delete the selected row\r\n        fetch(restlink + '?type=pof&id=' + id, {\r\n            method: 'DELETE',\r\n        })\r\n        .then(response => response.text())\r\n        .then(data => {\r\n            //if everything is ok the list is reloaded.\r\n            getPortfolio();\r\n        })\r\n        .catch(error => {\r\n            console.log('Error: ', error);\r\n        })\r\n    }\r\n}\r\n\r\n//function to populate the form when \"Ändra\" is pushed next to a site in portfolio\r\nfunction setFormPof(id){\r\n\r\n    //call toggle function to show the edit form\r\n    addNewPofDispToggle(\"edit\");\r\n    \r\n    //hold the selected site's id.\r\n    idHolder = id;\r\n    \r\n    //fetch data for the slected row.  \r\n    fetch(restlink + '?type=pof&id=' + id)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        data.forEach(pof => {\r\n            //fetched data is pushed to the form\r\n            pofTitle.value = pof.title;\r\n            pofURL.value = pof.url;\r\n            pofDescription.value = pof.description;                   \r\n        });\r\n    })\r\n}\r\n\r\n//fucntion to update a site with new data\r\nfunction updatePof(){\r\n\r\n    //get data form the form and add it to variables\r\n    let var_pofTitle = pofTitle.value;\r\n    let var_pofURL = pofURL.value\r\n    let var_pofDesc = pofDescription.value;\r\n\r\n    //validate the input if anyone returns false it jump out of this function\r\n    if(!verifyTitle(var_pofTitle) || !verifyUrl(var_pofURL) || !verifyDescription(var_pofDesc)){\r\n        return;\r\n    }\r\n    //concatenate fetched data to a single json variable\r\n    let concatPof = {'title': var_pofTitle, 'url': var_pofURL, 'description': var_pofDesc};\r\n    \r\n    //call rest-api to push the edited data to database\r\n    fetch(restlink + '?type=pof&id=' + idHolder, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(concatPof),\r\n    })\r\n    .then(response => response.text())\r\n    .then(data => {\r\n        //if everything is ok the list is reloaded and the form is toggled to hide\r\n        getPortfolio();\r\n        addNewPofDispToggle();\r\n    })\r\n    .catch(error => {\r\n        console.log('Error: ', error);\r\n    })\r\n}\r\n\r\n\r\n//-- workexperience --//\r\n\r\n//Element Variables \r\nlet wrkSubmitBtn = document.getElementById(\"wrkSubmitBtn\");\r\nlet wrkEditBtn = document.getElementById(\"wrkEditBtn\");\r\nlet wrkAddEdit = document.getElementById(\"wrkAddEdit\");\r\nlet addNewWrkDispBtn = document.getElementById(\"addNewWrkDispBtn\");\r\n\r\n//Element Variable Link\r\nlet wrkLink = document.getElementById(\"wrk_link\");\r\n\r\n//Form Element\r\nlet wrkForm = document.getElementById(\"wrkForm\");\r\nlet wrkEmployer = document.getElementById(\"wrkEmployer\");\r\nlet wrkTitle = document.getElementById(\"wrkTitle\");\r\nlet wrkStartDate = document.getElementById(\"wrkStartDate\");\r\nlet wrkEndDate = document.getElementById(\"wrkEndDate\");\r\n\r\n//Eventlisteners\r\nwrkLink.addEventListener(\"click\", getWrkexperience);\r\naddNewWrkDispBtn.addEventListener('click',addNewWrkDispToggle);\r\nwrkSubmitBtn.addEventListener('click', createWrk);\r\nwrkEditBtn.addEventListener('click', updateWrk);\r\n\r\n//Function to load Work experience and print it to the listContainer\r\nfunction getWrkexperience() {\r\n    \r\n    //Set classes on the links to show where we are\r\n    wrkLink.classList.add(\"visited\");\r\n    pofLink.classList.remove(\"visited\");\r\n    eduLink.classList.remove(\"visited\");\r\n    //Show or hide Add new buttons.\r\n    addNewWrkDispBtn.style.display = \"block\";\r\n    addNewPofDispBtn.style.display = \"none\";\r\n    addNewEduDispBtn.style.display = \"none\";\r\n\r\n    //Toggles Portfolio form if it was in state Block\r\n    if(pofAddEdit.style.display === 'block') {\r\n        addNewPofDispToggle();\r\n    }\r\n    //Toggles Education form if it was in state Block\r\n    if(eduAddEdit.style.display === 'block') {\r\n        addNewEduDispToggle();\r\n    }\r\n    \r\n    //Empty the listcontainer \r\n    listContainer.innerHTML = \"\";\r\n    \r\n    //Addlist header\r\n    listContainer.innerHTML +=\r\n    `<div class=\"rowWrapper listheader\">\r\n        <div class=\"adm_col1\">\r\n            <b>Arbete:</b>\r\n        </div>\r\n        <div class=\"adm_col2\">\r\n            <b>Titel:</b> \r\n        </div>\r\n        <div class=\"adm_col3\">\r\n            <b>Startdatum:</b>\r\n        </div>\r\n        <div class=\"adm_col4\">\r\n            <b>Slutdatum:</b>\r\n        </div>\r\n    </div>\r\n    `;\r\n\r\n    //Call restapi to get data from work experience table\r\n    fetch(restlink + '?type=wrk')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        data.forEach(wrk => {\r\n            //Run substring on start and end date to only show year and month.\r\n            let tmp_startdate = wrk.startDate\r\n            tmp_startdate = tmp_startdate.substring(0,7);\r\n            let tmp_enddate = wrk.endDate\r\n            tmp_enddate = tmp_enddate.substring(0,7);\r\n            //Add fetched data to listContainer element.\r\n            listContainer.innerHTML +=\r\n            `<div class=\"rowWrapper\">\r\n                <div class=\"adm_col1\">\r\n                <span class=\"small_listheader\">Arbete: </span>${wrk.employer}\r\n                </div>\r\n                <div class=\"adm_col2\">\r\n                <span class=\"small_listheader\">Titel: </span>${wrk.title}\r\n                </div>\r\n                <div class=\"adm_col3\">\r\n                <span class=\"small_listheader\">Start datum: </span>${tmp_startdate}\r\n                </div>\r\n                <div class=\"adm_col4\">\r\n                <span class=\"small_listheader\">Slut datum: </span>${tmp_enddate}\r\n                </div>\r\n                <div class=\"adm_col5\">\r\n                    <button id=\"${wrk.id}\" class=\"btn_del\" onClick=\"deleteWrk(${wrk.id})\">Radera</button>\r\n                    <button id=\"${wrk.id}\" class=\"btn_update\" onClick=\"setFormWrk(${wrk.id})\">Ändra</button>\r\n                </div>\r\n            </div>`; \r\n        });\r\n    })\r\n\r\n}\r\n\r\n//Toggle function to view/Hide and reset add-form and rest and view the edit form.\r\nfunction addNewWrkDispToggle(value) {\r\n\r\n    //If addEdit container is showing, hide it and toggle some buttons and change test to header and change text to add new button.\r\n    if(wrkAddEdit.style.display === \"block\") {\r\n        wrkAddEdit.style.display =\"none\"\r\n        wrkSubmitBtn.style.display = 'block';\r\n        wrkEditBtn.style.display = 'none';\r\n        addNewWrkDispBtn.innerText = \"Lägg till ny erfarenhet\";\r\n        wrkFormheader.innerHTML = \"Lägg till erfarenhet:\";\r\n        wrkForm.reset();\r\n    } \r\n    //if addEdit is hiding, show it and change add new button's text to hide, and reset form.\r\n    else {\r\n        wrkAddEdit.style.display = \"block\";\r\n        addNewWrkDispBtn.innerText = \"Dölj\";\r\n        wrkEditBtn.style.display = 'none';\r\n        wrkForm.reset();\r\n    }\r\n    //If function is called with value edit it does almost the same as the first if-state but\r\n    //it also hides submit new button, view  submit edit and change header of the form.\r\n    if(value === \"edit\") {\r\n        wrkAddEdit.style.display = \"block\";\r\n        addNewWrkDispBtn.innerText = \"Dölj\";\r\n        wrkSubmitBtn.style.display = 'none';\r\n        wrkEditBtn.style.display = 'block';\r\n        wrkFormheader.innerHTML = \"Ändra erfarenhet\";\r\n        wrkForm.reset();\r\n    }\r\n}\r\n\r\n//function to create a work experience\r\nfunction createWrk() {\r\n\r\n    //Fetch data from form\r\n    let var_wrkEmployer = wrkEmployer.value;\r\n    let var_wrkTitle = wrkTitle.value\r\n    let var_wrkStartDate = wrkStartDate.value;\r\n    let var_wrkEndDate = wrkEndDate.value;\r\n\r\n    //validate the input if anyone returns false it jump out of this function\r\n    if(!verifyEmployer(var_wrkEmployer) || !verifyWrkTitle(var_wrkTitle) || !verifyStartDate(var_wrkStartDate) || !verifyEndDate(var_wrkEndDate)){\r\n        return;\r\n    }\r\n\r\n    //concatenate fetched data to a single json variable\r\n    let concatWrk = {'employer': var_wrkEmployer, 'title': var_wrkTitle, 'startDate': var_wrkStartDate, 'endDate': var_wrkEndDate};\r\n    \r\n    //call rest-api to post the data to database\r\n    fetch(restlink + '?type=wrk', {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        },\r\n        body: JSON.stringify(concatWrk),\r\n    })\r\n    .then(response => response.text())\r\n    .then(data => {\r\n        //If everything worked fine the list is reloaded and the form toggled to hide.\r\n        getWrkexperience();\r\n        addNewWrkDispToggle();\r\n    })\r\n    .catch(error => {\r\n        console.log('Error: ', error);        \r\n    })\r\n\r\n}\r\n\r\n//function to delete a specific work experience\r\nfunction deleteWrk(id) {\r\n\r\n    //alert message to check that you want to delete the selected row.\r\n    if (confirm('Är du säker på att du vill ta bort detta?')) {\r\n        \r\n        //call the rest api to delete the selected row\r\n        fetch(restlink + '?type=wrk&id=' + id, {\r\n            method: 'DELETE',\r\n        })\r\n        .then(response => response.text())\r\n        .then(data => {\r\n            //if everything is ok the list is reloaded.\r\n            getWrkexperience();\r\n        })\r\n        .catch(error => {\r\n            console.log('Error: ', error);\r\n        })\r\n    }\r\n}\r\n\r\n//function to populate the form when \"Ändra\" is pushed\r\nfunction setFormWrk(id){\r\n\r\n    //call toggle function to show the edit form\r\n    addNewWrkDispToggle(\"edit\");\r\n    \r\n    //hold the selected work experience id.\r\n    idHolder = id;\r\n    \r\n    //fetch data for the slected row.  \r\n    fetch(restlink + '?type=wrk&id=' + id)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        data.forEach(wrk => {\r\n            //fetched data is pushed to the form\r\n            wrkEmployer.value = wrk.employer;\r\n            wrkTitle.value = wrk.title;\r\n            wrkStartDate.value = wrk.startDate;\r\n            wrkEndDate.value = wrk.endDate;\r\n        });\r\n    })\r\n}\r\n\r\n//fucntion to update a wrk experience with new data\r\nfunction updateWrk(){\r\n\r\n    //Collect data from the form\r\n    let var_wrkEmployer = wrkEmployer.value;\r\n    let var_wrkTitle = wrkTitle.value\r\n    let var_wrkStartDate = wrkStartDate.value;\r\n    let var_wrkEndDate = wrkEndDate.value;\r\n\r\n    //validate the input if anyone returns false it jump out of this function\r\n    if(!verifyEmployer(var_wrkEmployer) || !verifyWrkTitle(var_wrkTitle) || !verifyStartDate(var_wrkStartDate) || ! verifyEndDate(var_wrkEndDate)){\r\n        return;\r\n    }\r\n\r\n    //concatenate fetched data to a single json variable\r\n    let concatWrk = {'employer': var_wrkEmployer, 'title': var_wrkTitle, 'startDate': var_wrkStartDate, 'endDate': var_wrkEndDate};\r\n    \r\n    //Call rest api to send the edited data\r\n    fetch(restlink + '?type=wrk&id=' + idHolder, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(concatWrk),\r\n    })\r\n    .then(response => response.text())\r\n    .then(data => {\r\n        //if everything is ok the list is reloaded and the form is toggled to hide\r\n        getWrkexperience();\r\n        addNewWrkDispToggle();\r\n    })\r\n    .catch(error => {\r\n        console.log('Error: ', error);\r\n    })\r\n}\r\n\r\n//validators\r\n\r\nfunction verifyUniversity(value) {\r\n    if(value.length === 0 || value.length > 120) {\r\n        alert(\"Lärosäte kan inte vara tom eller över 120 tecken.\");\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n}\r\n\r\nfunction verifyCourse(value) {\r\n    if(value.length === 0 || value.length > 50) {\r\n        alert(\"Utbildning kan inte vara tom eller över 50 tecken.\");\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n}\r\n\r\nfunction verifyStartDate(value) {\r\n    if(!(value.length === 10)) {\r\n        console.log(value.length);\r\n        alert(\"Start datum måste innehålla 10 tecken yyyy-mm-dd.\");\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }  \r\n}\r\n\r\nfunction verifyEndDate(value) {\r\n    if(!(value.length === 10)) {\r\n        alert(\"Slut datum måste innehålla 10 tecken yyyy-mm-dd.\");\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }  \r\n}\r\n\r\nfunction verifyTitle(value) {\r\n    if(value.length === 0 || value.length > 50) {\r\n        alert(\"Titel kan inte vara tom eller över 50 tecken.\");\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n}\r\n\r\nfunction verifyUrl(value) {\r\n    if(value.length === 0 || value.length > 150) {\r\n        alert(\"URL kan inte vara tom eller över 150 tecken.\");\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n}\r\n\r\nfunction verifyDescription(value) {\r\n    if(value.length === 0 || value.length > 1000) {\r\n        alert(\"Beskrivnignen kan inte vara tom eller över 1000 tecken.\");\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }  \r\n}\r\n\r\nfunction verifyEmployer(value) {\r\n    if(value.length === 0 || value.length > 100) {\r\n        alert(\"Arbetsgivare kan inte vara tom eller över 100 tecken.\");\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }    \r\n}\r\n\r\nfunction verifyWrkTitle(value) {\r\n    if(value.length === 0 || value.length > 100) {\r\n        alert(\"Anställningsform kan inte vara tom eller över 100 tecken.\");\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }    \r\n}"]}